#pragma once

#include <DejaVu/types.hpp>

namespace djv
{
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Structure representing a simple RGBA color.
	/// 
	/// The components should always be in the range [0, 1]. However, any value is accepted.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	struct Color
	{
		float r;
		float g;
		float b;
		float a;
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Structure representing a point in an image.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	struct Point
	{
		uint64_t x;
		uint64_t y;
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Abstract class, base model for a shape that can be drawn on an image.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	class Shape
	{
		public:

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			/// \brief Draw the shape on the target.
			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			virtual void draw(Img& target) const = 0;

			Color color;  ///< Color of the shape.
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Class reprensenting a line that can be drawn on an image.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	class Line : public Shape
	{
		public:

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			/// \brief See Shape::draw()
			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			void draw(Img& target) const;

			Point p1;  ///< Position of the first end of the line. The order between p1 and p2 has no importance.
			Point p2;  ///< Position of the second end of the line. The order between p1 and p2 has no importance.
	};

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/// \brief Class reprensenting a rectangle that can be drawn on an image.
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	class Rect : public Shape
	{
		public:

			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			/// \brief See Shape::draw()
			///////////////////////////////////////////////////////////////////////////////////////////////////////////
			void draw(Img& target) const;

			Point topLeft;      ///< Position of the top-left corner of the rectangle.
			Point bottomRight;  ///< Position of the bottom-right corner of the rectangle.
			bool fill;          ///< If true, the rectangle is drawn filled. Else, a border is drawn inside the rectangle.
	};
}
